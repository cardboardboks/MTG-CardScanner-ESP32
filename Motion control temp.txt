





    unsigned long currentMicrosX = micros();
    unsigned long currentMicrosY = micros();
    unsigned long currentMicrosAccl = micros();
    unsigned long currentOverallAccl = micros();

    if (currentMicrosAccl - previousMicrosAccl >= intervalAccl) {
      previousMicrosAccl = currentMicrosAccl;

      //check if the distance being traveled is less then the acceleration distance and halve it so the acceleration and deacelrtion dont cancel out
      if (StepXPos - startXPos < 0) {
        fromXStart = (StepXPos - startXPos) * -1;
      } else {
        fromXStart = (StepXPos - startXPos);
      }

      if (StepXPos - endXPos < 0) {
        fromXEnd = (StepXPos - endXPos) * -1;
      } else {
        fromXEnd = (StepXPos - endXPos);
      }

      if (StepYPos - startYPos < 0) {
        fromYStart = (StepYPos - startYPos) * -1;
      } else {
        fromYStart = (StepYPos - startYPos);
      }

      if (StepYPos - endYPos < 0) {
        fromYEnd = (StepYPos - endYPos) * -1;
      } else {
        fromYEnd = (StepYPos - endYPos);
      }

      if (fromYStart < acclDur && fromYEnd > acclDur) {
        accelY -= .05;
      }

      if (fromYEnd < acclDur && fromYStart > acclDur) {
        accelY += .05;
      }


      if (fromXStart < acclDur && fromXEnd > acclDur) {
        accelX -= .05;
      }

      if (fromXEnd < acclDur && fromXStart > acclDur) {
        accelX += .05;
      }
    }

    accelXOut = accelX;
    accelYOut = accelY;


    if (accelXOut < .1) {
      accelXOut = .1;
    }
    if (accelXOut > 10) {
      accelXOut = 10;
    }

    if (accelYOut < .1) {
      accelYOut = .1;
    }
    if (accelYOut > 10) {
      accelYOut = 10;
    }

    /*
    Serial.print("X ");
    Serial.print(fromXEnd);
    Serial.print("  Y ");
    Serial.println(fromYEnd);


    Serial.print( intervalX * accelXOut);
    Serial.print("\t");
    Serial.println(intervalY * accelXOut);

    Serial.print("From Start ");
    Serial.print(fromXStart);
    Serial.print("  To End ");
    Serial.print(fromXEnd);
    Serial.print("  Accel ");
    Serial.println(accelXOut);

    Serial.print("From Start ");
    Serial.print(fromXStart);
    Serial.print("  To End ");
    Serial.println(fromXEnd);
    */


    if (XCard - StepXPos != 0) {
      if (currentMicrosX - previousMicrosX >= (intervalX * accelXOut)) {
        previousMicrosX = currentMicrosX;

		stepX();

        StepXPos += StepXDir;
      }
    } else {
      StepXDir = 0;
    }


    if (YCard - StepYPos != 0) {
      if (currentMicrosY - previousMicrosY >= (intervalY * accelYOut)) {
        previousMicrosY = currentMicrosY;

        stepY();
		
        StepYPos += StepYDir;
      }
    } else {
      StepYDir = 0;
    }
  



